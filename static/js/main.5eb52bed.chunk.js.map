{"version":3,"sources":["Components/Section/Section.module.css","Components/Contacts/Contacts.module.css","Components/Section/Section.js","Components/Phonebook/Phonebook.js","Components/Contacts/Contacts.js","Components/App.js","index.js","Components/Phonebook/Phonebook.module.css"],"names":["module","exports","Section","children","className","s","PhoneBook","state","name","number","handleChangeInput","e","currentTarget","value","setState","onSubmitForm","preventDefault","props","submitForm","formReset","ContainerForm","onSubmit","this","Title","type","onChange","pattern","title","required","Btn","React","Component","Contacts","mainListContact","contactsList","onDeleteContact","filterContacts","onChangeFilter","Container","length","List","Label","map","id","ElemList","onClick","App","contacts","filter","dataSubmitForm","contact","toLowerCase","includes","alert","elContact","shortid","generate","prevState","deleteContact","contactId","changeFilterContacts","localStorage","getItem","parsContacts","JSON","parse","prevProps","setItem","stringify","normalazFilter","filterListContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5eb52bed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__2B69p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Contacts_Container__oFJlL\",\"Title\":\"Contacts_Title__nqrqB\",\"List\":\"Contacts_List__1Evlz\",\"ElemList\":\"Contacts_ElemList__3YEDz\",\"Btn\":\"Contacts_Btn__1i4fd\",\"Label\":\"Contacts_Label__3sHJ1\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ children }) => <div className={s.Section}>{children}</div>;\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Phonebook.module.css\";\n\nclass PhoneBook extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChangeInput = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  onSubmitForm = (e) => {\n    e.preventDefault();\n\n    this.props.submitForm(this.state);\n    this.formReset();\n  };\n\n  formReset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={s.ContainerForm} onSubmit={this.onSubmitForm}>\n        <h2 className={s.Title}>Phonebook</h2>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChangeInput}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChangeInput}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.Btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nPhoneBook.propTypes = {\n  submitForm: PropTypes.func.isRequired,\n};\n\nexport default PhoneBook;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Contacts.module.css\";\n\nconst Contacts = ({\n  mainListContact,\n  contactsList,\n  onDeleteContact,\n  filterContacts,\n  onChangeFilter,\n}) => {\n  return (\n    <div className={s.Container}>\n      <h2 className={s.Title}>Contacts</h2>\n      {mainListContact.length === 0 ? (\n        <p>Sorry! No contacts...</p>\n      ) : (\n        <ul className={s.List}>\n          <label className={s.Label}>\n            Find contacts by name:\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={filterContacts}\n              onChange={onChangeFilter}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          {contactsList.map(({ id, name, number }) => (\n            <li key={id} className={s.ElemList}>\n              <p>\n                {name}: {number}\n              </p>\n              <button className={s.Btn} onClick={() => onDeleteContact(id)}>\n                Delete contact\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  contactsList: PropTypes.array.isRequired,\n  mainListContact: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n  filterContacts: PropTypes.string.isRequired,\n};\n\nexport default Contacts;\n","import React from \"react\";\nimport shortid from \"shortid\";\n// import listContacts from \"../Data/Data.json\";\n\nimport Section from \"./Section/Section\";\nimport PhoneBook from \"./Phonebook/Phonebook\";\nimport Contacts from \"./Contacts/Contacts\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  dataSubmitForm = ({ name, number }) => {\n    const arrayName = this.state.contacts.map((contact) =>\n      contact.name.toLowerCase()\n    );\n    const checkName = arrayName.includes(name.toLowerCase());\n\n    if (checkName) {\n      alert(`${name} is already in contacts`);\n      return;\n    } else {\n      const elContact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n\n      this.setState((prevState) => ({\n        contacts: [elContact, ...prevState.contacts],\n      }));\n    }\n\n\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilterContacts = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsContacts = JSON.parse(contacts);\n\n    if (parsContacts) {\n      this.setState({contacts : parsContacts})      \n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const normalazFilter = filter.toLowerCase();\n    const filterListContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalazFilter)\n    );\n\n    return (\n      <Section>\n        <PhoneBook submitForm={this.dataSubmitForm} />\n\n        <Contacts\n          mainListContact={contacts}\n          onChangeFilter={this.changeFilterContacts}\n          filterContacts={filter}\n          contactsList={filterListContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.module.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerForm\":\"Phonebook_ContainerForm__1LLjX\",\"Title\":\"Phonebook_Title__3wwqW\",\"Btn\":\"Phonebook_Btn__eA643\"};"],"sourceRoot":""}